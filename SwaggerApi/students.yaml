openapi: 3.0.0
info:
  version: 1.0.0
  title: "Students API"
  description: API for managing TutorMe.
  license:
    name: MIT
servers:
  - url: http://localhost:8000/api/v1
    description: Localhost
paths:
  /students:
    get:
      tags:
        - student
      description: Ottiene una lista degli studenti iscritti al sito.
      responses:
        '200':
          description: Collection of students
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
        '404':
          description: Students not found.
    post:
      tags:
        - student
      description: Creates a new student in the system.
      summary: Register a new student
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  description: Email address of the student
                password:
                  type: string
                  description: password of the student
      responses:
        '201':
          description: Student created. Link in the Location header
          headers:
            Location:
              schema:
                type: string
              description: Link to the newly created student.
        default:
          description: Unexpected error
  /students/me:
    get:
      tags:
        - student
      parameters:
        - name: token
          in: query
          description: student token
          required: true
          schema:
            type: string
      description: return the info of the logged student
      responses:
        '200':
          description: Student sees all prenotations made
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
  /students/{id}:
    get:
      tags:
        - student
      parameters:
        - name: id
          in: path
          description: ID of the student
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Checks the existance of the student and returns the email
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
  /students/ban:
    post:
      tags:
        - student
      description: ban the student
      requestBody:
        content:
          application/json:
            schema:
              properties:
                isBanned:
                  type: boolean
      responses:
        '200':
          description: Success

    
