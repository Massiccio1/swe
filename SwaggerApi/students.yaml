openapi: 3.0.0
info:
  version: '1.0'
  title: "EasyLib OpenAPI 3.0"
  description: API for managing TutorMe.
  license:
    name: MIT
servers:
  - url: http://localhost:8000/api/v1
    description: Localhost
paths:
  /students:
    get:
      description: >-
        Ottiene una lista degli studenti iscritti al sito.
      responses:
        '200':
          description: 'Collection of students'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
        '404':
          description: 'Students not founded.'
    post:
      tags:
        - studente
      description: >-
        Creates a new student in the system.
      summary: Register a new student
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  description: 'Email address of the student'
                password:
                  type: string
                  description: 'password of the student'
      responses:
        '201':
          description: 'Student created. Link in the Location header'
          headers:
            'Location':
              schema:
                type: string
              description: Link to the newly created student.
student/me:
  get:
    description: 'return the info of the logged student'
      responses: 
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
/student/{id}:
  get:
    parameters:
      -name: id 
      in: path
      description: 'ID of the student'
      required: true
      schema:
        type: integer
    responses: 
    '200':
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Student'
/studenti/ban:
  post:
    description: 'ban the student'
    requestBody: 
      content:
        application/json:
          schema:
            properties:
              isBanned:
                type: boolean
          required:
          - isBanned
    responses:
      '200':
        description: 'Success'
components:
  schemas:
    Student:
      type: object
      required:
        - id
        - email
        - password
        - isBanned
      properties:
        id:
          type: integer
          description: 'ID of the Student'
        email:
          type: string
          description: 'Email address of the Student'
        password:
          type: string
          description: 'Password  of the Student'
        isBanned:
          type: Boolean
          default: false

    
