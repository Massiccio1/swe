openapi: 3.0.0
info:
  version: 1.0.0
  title: "Tutors API"
  description: API for managing TutorMe.
servers:
  # Added by API Auto Mocking Plugin
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/MASSIMOGIRARDELLI/TutorME/1.0.0
  - url: https://tutor-me.onrender.com/api/v1
    description: render hosted site
 paths:   
/tutors:
    get:
      tags:
        - tutor
      description: Gets the list of tutors, requires token of tutor in the body
      summary: View all the tutors.
      responses:
        '200':
          description: Collection of tutors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tutor'
    post:
      tags:
        - tutor
      description: Create a new tutor.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tutor'
      responses:
        '201':
          description: tutor created. Link in the Location header
          headers:
            Location:
              schema:
                type: string
              description: Link to the newly created tutor.
  /tutors/me:
    get:
      tags:
          - tutor
      description: if I am logged as a tutor return my information
      parameters:
        - name: token
          in: query
          description: tutor token
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tutor'
    delete:
      tags:
        - tutor
      description: Delete a tutor if is logged-in
      parameters:
        - name: token
          in: query
          description: tutor token
          schema:
            type: string
      responses:
        '204':
          description: Tutor deleted.
  /tutors/{id}:
    get:
      tags:
        - tutor
      description: Get a tutor by his ID
      parameters:
        - name: id
          in: path
          description: ID of the tutor to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tutor'
  /tutors/me/slot:
    post:
      description: Enters a date indicating its availability
      parameters:
        - name: token
          in: query
          description: tutor token
          required: true
          schema:
            type: string
      tags:
        - tutor
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - slot
              properties:
                slot:
                  type: array
                  description: Array of available slot to reserve this tutor
                  items:
                    type: integer
      responses:
        '200':
          description: "Success"
  /tutors/me/slot/{date}:
    delete:
      description: Delete a slot
      tags:
        - tutor
      parameters:
        - name: date
          in: path
          description: Date equal to slot
          required: true
          schema:
            type: integer
        - name: token
          in: query
          description: tutor token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Slot deleted.
  /tutors/me/teaching-material:
    get:
      tags:
        - tutor
      responses:
        '200':
          description: Student created. Link in the Location header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeachingMaterial'
    post:
      responses:
        '200':
          description: html with the resources uploaded
      tags:
        - tutor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeachingMaterial'
