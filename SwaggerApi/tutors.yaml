openapi: 3.0.0
info:
  version: '1.0'
  title: "TutorMe OpenAPI 3.0"
  description: API for managing TutorMe.
servers:
  - url: http://localhost:8000/api/v1
    description: Localhost
/Tutors:
  get:
  description:  Gets the list of tutors.
  summary: View all the tutors.
     responses:
      '200':
      description: 'Collection of tutors'
        content:
          application/json:
            schema:
              type: array
               $ref: '#/components/schemas'
  post:
  tags:
    - tutor
  description: "Create a new tutor."
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          required:
            - email
            - password
            - username
          properties:
            email:
              type: string
              description: "Email address of the tutor."
            username:
              type: string
              description: "Username of the tutor."
            password:
              type: string
              description: "Password of the tutor."
      responses:
        '201':
          description: 'tutor created. Link in the Location header'
          headers:
            'Location':
              schema:
                type: string
              description: Link to the newly created tutor.
  /tutor/me:
    get:
      description: 'if i am logged as a tutor return my information'    
        responses:
          '200':
            description: 'Success'
            content:
              application/json:
                schema:
                    $ref: '#/components/schemas/Tutor'
    delete:
      tags:
        - tutor
      description: 'Delete a tutor if is logged-in'
      responses:
       '204' :
        description: Tutore deleted.
  /{id}:
    get:
      tags:
       - tutor
      description: 'Get a tutor by his ID'
      parameters:
        - id: id
          in: path
          description: 'ID of the tutor to return'
          required: true
          schema:
            type: integer
          responses:
           '200':
            description: 'Success'
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Tutor'       
tutor/me/slot:
  post:
    tags:
     - slot
    description: 'enters a date indicating its availability'
    requestBody:
      required: true
      content:
        application/json:
          schema: 
            type: object
            properties:
              slot:
                type: integer
tutor/me/slot/{date}:
  delete:
    description: 'delete a slot'
      tags:
      - slot
    parameters:
    - name: date
      in: path
      description: "date equal to slot"
      required: true
        schema: integer
    responses:
      '200':
        description: 'Slot deleted.'
components:
  schemas:
     Tutor:
      type: object
      required:
        - id
        - email
        - password
        - name
        - desc
      properties:
        id:
         type: integer
         description: 'ID of the Tutor,unique'
        email:
          type: string
          description: 'Email address of the Tutor,unique'
        password:
          type: string
          description: 'Password  of the Tutor'
        name:
          type: string
          description: 'Name and surname of the Tutor'
        desc:
          type: string
          description: 'Tutor presentation'
        slot: 
          type: array
          description: 'array of available slot to reserve this tutor'
        items:
          type: integer
          uniqueItems: true
